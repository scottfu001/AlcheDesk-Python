# Generated by Django 3.2.3 on 2021-05-14 06:54

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('atm_api', '0002_remove_dev_models'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExecutionLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('updated_at', models.DateTimeField()),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': '_execution_log',
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('name', models.TextField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('uuid', models.UUIDField()),
                ('parameter', models.JSONField()),
                ('uri', models.TextField(blank=True, null=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('file_type', models.ForeignKey(
                    on_delete=django.db.models.deletion.DO_NOTHING, to='atm_api.filetype')),
            ],
            options={
                'db_table': '_file',
            },
        ),
        migrations.CreateModel(
            name='InstructionResult',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('action', models.TextField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('log', models.TextField(blank=True, null=True)),
                ('is_finished', models.BooleanField()),
                ('instruction', models.JSONField()),
                ('data', models.JSONField()),
                ('start_at', models.DateTimeField(blank=True, null=True)),
                ('end_at', models.DateTimeField(blank=True, null=True)),
                ('logical_order_index', models.CharField(
                    blank=True, max_length=20, null=True)),
                ('input_data', models.TextField(blank=True, null=True)),
                ('input_type', models.CharField(
                    blank=True, max_length=50, null=True)),
                ('input_parameter', models.JSONField()),
                ('output_data', models.TextField(blank=True, null=True)),
                ('output_type', models.CharField(
                    blank=True, max_length=50, null=True)),
                ('output_parameter', models.JSONField()),
                ('expected_value', models.TextField(blank=True, null=True)),
                ('return_value', models.TextField(blank=True, null=True)),
                ('is_overwrite', models.BooleanField(blank=True, null=True)),
                ('target', models.TextField(blank=True, null=True)),
                ('instruction_options', models.TextField(blank=True, null=True)),
                ('instruction_option_log', models.TextField(blank=True, null=True)),
                ('result_overwritten', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': '_instruction_result',
            },
        ),
        migrations.CreateModel(
            name='StepLog',
            fields=[
                ('message', models.TextField()),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField()),
                ('created_at', models.DateTimeField()),
                ('instruction_result', models.ForeignKey(
                    on_delete=django.db.models.deletion.DO_NOTHING, to='atm_api.instructionresult')),
                ('step_log_type', models.ForeignKey(
                    on_delete=django.db.models.deletion.DO_NOTHING, to='atm_api.steplogtype')),
            ],
            options={
                'db_table': '_step_log',
            },
        ),
        migrations.RenameModel(
            old_name='ElementLocatorType',
            new_name='ElementLocator',
        ),
        migrations.DeleteModel(
            name='ContentArchive',
        ),
        migrations.AlterUniqueTogether(
            name='driverpackdriverlink',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='driverpackdriverlink',
            name='driver',
        ),
        migrations.RemoveField(
            model_name='driverpackdriverlink',
            name='driver_pack',
        ),
        migrations.AlterUniqueTogether(
            name='drivertypeinstructiontypelink',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='drivertypeinstructiontypelink',
            name='driver_type',
        ),
        migrations.RemoveField(
            model_name='drivertypeinstructiontypelink',
            name='instruction_type',
        ),
        migrations.AlterUniqueTogether(
            name='elementtypeelementlocatortypelink',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='elementtypeelementlocatortypelink',
            name='element_locator_type',
        ),
        migrations.RemoveField(
            model_name='elementtypeelementlocatortypelink',
            name='element_type',
        ),
        migrations.AlterUniqueTogether(
            name='elementtypeinstructionactionlink',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='elementtypeinstructionactionlink',
            name='element_type',
        ),
        migrations.RemoveField(
            model_name='elementtypeinstructionactionlink',
            name='instruction_action',
        ),
        migrations.AlterUniqueTogether(
            name='elementtypeinstructionoptionlink',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='elementtypeinstructionoptionlink',
            name='element_type',
        ),
        migrations.RemoveField(
            model_name='elementtypeinstructionoptionlink',
            name='instruction_option',
        ),
        migrations.AlterUniqueTogether(
            name='instructiontypeelementtypelink',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='instructiontypeelementtypelink',
            name='element_type',
        ),
        migrations.RemoveField(
            model_name='instructiontypeelementtypelink',
            name='instruction_type',
        ),
        migrations.AlterUniqueTogether(
            name='instructiontypeinstructionactionlink',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='instructiontypeinstructionactionlink',
            name='instruction_action',
        ),
        migrations.RemoveField(
            model_name='instructiontypeinstructionactionlink',
            name='instruction_type',
        ),
        migrations.RemoveField(
            model_name='prodexecutionlog',
            name='instruction_result',
        ),
        migrations.RemoveField(
            model_name='prodexecutionlog',
            name='log_level',
        ),
        migrations.RemoveField(
            model_name='prodexecutionlog',
            name='run',
        ),
        migrations.RemoveField(
            model_name='prodexecutionlog',
            name='run_type',
        ),
        migrations.RemoveField(
            model_name='prodfile',
            name='file_type',
        ),
        migrations.RemoveField(
            model_name='prodfile',
            name='instruction_result',
        ),
        migrations.RemoveField(
            model_name='prodfile',
            name='run',
        ),
        migrations.RemoveField(
            model_name='prodfile',
            name='run_type',
        ),
        migrations.RemoveField(
            model_name='prodinstructionresult',
            name='instruction_0',
        ),
        migrations.RemoveField(
            model_name='prodinstructionresult',
            name='run',
        ),
        migrations.RemoveField(
            model_name='prodinstructionresult',
            name='run_type',
        ),
        migrations.RemoveField(
            model_name='prodinstructionresult',
            name='status',
        ),
        migrations.RemoveField(
            model_name='prodsteplog',
            name='instruction_result',
        ),
        migrations.RemoveField(
            model_name='prodsteplog',
            name='run_type',
        ),
        migrations.RemoveField(
            model_name='prodsteplog',
            name='step_log_type',
        ),
        migrations.AlterUniqueTogether(
            name='testcasesharefoldertestcaselink',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='testcasesharefoldertestcaselink',
            name='test_case',
        ),
        migrations.RemoveField(
            model_name='testcasesharefoldertestcaselink',
            name='test_case_share_folder',
        ),
        migrations.AlterUniqueTogether(
            name='testcasetaglink',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='testcasetaglink',
            name='tag',
        ),
        migrations.RemoveField(
            model_name='testcasetaglink',
            name='test_case',
        ),
        migrations.DeleteModel(
            name='UserActivityLog',
        ),
        migrations.AlterUniqueTogether(
            name='usercontent',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='usercontent',
            name='content_type',
        ),
        migrations.RemoveField(
            model_name='element',
            name='element_locator_type',
        ),
        migrations.RemoveField(
            model_name='run',
            name='run_type',
        ),
        migrations.RemoveField(
            model_name='runsetresult',
            name='run_type',
        ),
        migrations.AddField(
            model_name='driverpack',
            name='drivers',
            field=models.ManyToManyField(to='atm_api.Driver'),
        ),
        migrations.AddField(
            model_name='drivertype',
            name='instruction_types',
            field=models.ManyToManyField(to='atm_api.InstructionType'),
        ),
        migrations.AddField(
            model_name='element',
            name='element_locator',
            field=models.ForeignKey(
                default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='atm_api.elementlocator'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='elementtype',
            name='element_locators',
            field=models.ForeignKey(
                default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='atm_api.elementlocator'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='instructiontype',
            name='element_types',
            field=models.ManyToManyField(to='atm_api.ElementType'),
        ),
        migrations.AddField(
            model_name='instructiontype',
            name='instruction_actions',
            field=models.ManyToManyField(to='atm_api.InstructionAction'),
        ),
        migrations.AddField(
            model_name='testcase',
            name='tags',
            field=models.ManyToManyField(to='atm_api.Tag'),
        ),
        migrations.AddField(
            model_name='testcasesharefolder',
            name='test_cases',
            field=models.ForeignKey(
                default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='atm_api.testcase'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='element',
            name='element_type',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.DO_NOTHING, to='atm_api.elementtype'),
        ),
        migrations.AlterField(
            model_name='instruction',
            name='driver_type',
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='atm_api.drivertype'),
        ),
        migrations.AlterField(
            model_name='instruction',
            name='instruction_action',
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='atm_api.instructionaction'),
        ),
        migrations.AlterField(
            model_name='instructionbundleentry',
            name='element_type',
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='atm_api.elementtype'),
        ),
        migrations.AlterField(
            model_name='instructionbundleentry',
            name='instruction_action',
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='atm_api.instructionaction'),
        ),
        migrations.AlterModelTable(
            name='elementlocator',
            table='element_locator',
        ),
        migrations.DeleteModel(
            name='DriverPackDriverLink',
        ),
        migrations.DeleteModel(
            name='DriverTypeInstructionTypeLink',
        ),
        migrations.DeleteModel(
            name='ElementTypeElementLocatorTypeLink',
        ),
        migrations.DeleteModel(
            name='ElementTypeInstructionActionLink',
        ),
        migrations.DeleteModel(
            name='ElementTypeInstructionOptionLink',
        ),
        migrations.DeleteModel(
            name='InstructionTypeElementTypeLink',
        ),
        migrations.DeleteModel(
            name='InstructionTypeInstructionActionLink',
        ),
        migrations.DeleteModel(
            name='ProdExecutionLog',
        ),
        migrations.DeleteModel(
            name='ProdFile',
        ),
        migrations.DeleteModel(
            name='ProdInstructionResult',
        ),
        migrations.DeleteModel(
            name='ProdStepLog',
        ),
        migrations.DeleteModel(
            name='RunType',
        ),
        migrations.DeleteModel(
            name='TestCaseShareFolderTestCaseLink',
        ),
        migrations.DeleteModel(
            name='TestCaseTagLink',
        ),
        migrations.DeleteModel(
            name='UserContent',
        ),
        migrations.AddField(
            model_name='instructionresult',
            name='instruction_0',
            field=models.ForeignKey(blank=True, db_column='instruction_id', null=True,
                                    on_delete=django.db.models.deletion.DO_NOTHING, to='atm_api.instruction'),
        ),
        migrations.AddField(
            model_name='instructionresult',
            name='run',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.DO_NOTHING, to='atm_api.run'),
        ),
        migrations.AddField(
            model_name='instructionresult',
            name='status',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.DO_NOTHING, to='atm_api.status'),
        ),
        migrations.AddField(
            model_name='file',
            name='instruction_result',
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='atm_api.instructionresult'),
        ),
        migrations.AddField(
            model_name='file',
            name='run',
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='atm_api.run'),
        ),
        migrations.AddField(
            model_name='executionlog',
            name='instruction_result',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.DO_NOTHING, to='atm_api.instructionresult'),
        ),
        migrations.AddField(
            model_name='executionlog',
            name='log_level',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.DO_NOTHING, to='atm_api.loglevel'),
        ),
        migrations.AddField(
            model_name='executionlog',
            name='run',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.DO_NOTHING, to='atm_api.run'),
        ),
    ]
